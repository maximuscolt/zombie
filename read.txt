Create survivor POST
http://localhost:3000/survivors/

{"survivor": {"name":"domingo","age": "30","gender":"female","latitude": 12,"longitude":13,"inventory": { "Ammo": 5,"Water":2 }}}


Update survivor location PUT
http://localhost:3000/survivors/9/location
{"latitude": 25,"longitude":30}

Flag survivor as infected POST
http://localhost:3000/survivors/5/reports
{"reporter": 30}


trade POST
http://localhost:3000/trade
[{"survivor_id": 1, "items": {"Water": 2}}, {"survivor_id": 1, "items": {"Water": 1}}]

12
13

"inventory": { "Food": 3,"Medication":2 }}}


Listar Sobreviventes
URL
/survivors

MÃ©todo:
GET

Resposta de Sucesso:
Code: 200 
Content: list of survivors data, including inventory
Sample Call:

http elomar-zssn.herokuapp.com/survivors

Show Survivor
URL

/survivors/:id

Method:

GET

URL Params

Required:

id=[integer]

Success Response:

Code: 200 
Content: { survivor: [ survivor data, including inventory ] }
Sample Call:

http elomar-zssn.herokuapp.com/survivors/1

Create Survivor
URL

/survivors

Method:

POST

Data Params

survivor: name=[string], age=[integer], gender=[male | female], last\_location=[lat, long], inventory=[dictionary with resources as keys, quantities as values]

Success Response:

Code: 200 
Content: { survivor: [survivor data, including inventory] }
Sample Call:

-----{"survivor": {"name":"aquele","age": "30","gender":"female","latitude": 12,"longitude":13,"inventory": { "Ammo": 3 }}}


Fetch Survivor Location
Fetch last known location of a survivor

URL

/survivors/:id/location

Method:

GET

URL Params

id=[integer]

Success Response:

Code: 200 
Content: [lat, long]
Sample Call:

http elomar-zssn.herokuapp.com/survivors/1/location

Update Survivor Location
Update last known location of a survivor

URL

/survivors/:id/location

Method:

PATCH or PUT

URL Params

id=[integer]

Data Params

location: location=[lat, long]

Success Response:

Code: 200 
Content: [lat, long]
Sample Call:

http PATCH elomar-zssn.herokuapp.com/survivors/1/location location:='[-5.820,-35.212]'

Submit contamination report
Submits a report that a given survivor has been contaminated. A survivor that is reported contaminated 3 times is flagged as contaminated and cannot trade with other survivors.

URL

/survivors/:id/contamination_reports

Method:

POST

URL Params

id=[integer]

Data Params

contamination\_report: reporter\_id=[integer]

Success Response:

Code: 200 
Content: { contamination\_report: { report data } }
Sample Call:

`http POST elomar-zssn.herokuapp.com/survivors/20/contamination_reports contamination_report:='{"reporter_id": 21}'

Trade
Performs a trade with another survivor. In order for the trade to be successful both sides must be trading equal amounts of points; actually own the items they intend to trade; and not have been flagged as contaminated.

URL

/trades

Method:

POST

Data Params

parties: [{party_id: survivor id, items: dictionary with resources as keys, quantities as values}]

Success Response:

Code: 200 
Content: { parties: trade data }
Sample Call:

http elomar-zssn.herokuapp.com/trades parties:='[{"party_id": 21, "items": {"Medication": 1}}, {"party_id": 20, "items": {"Ammunition": 2}}]'

Reports
Fetch report data on a few topics related to the state of the world. Each report has its own response format, please refer to Report class for their formats and meaning.

URL

/reports/:report

Method:

GET

URL Params

report=[contaminated | non-contaminated | resources-per-survivor | points-lost]

Success Response:

Code: 200 
Content: { data: report data, varies by report }
Sample Call:

http elomar-zssn.herokuapp.com/reports/infected